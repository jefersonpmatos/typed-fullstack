/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppLayoutRouteImport } from './routes/_app/layout'
import { Route as AppAboutRouteImport } from './routes/_app/about'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app/layout',
  path: '/layout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppAboutRoute = AppAboutRouteImport.update({
  id: '/_app/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AppAboutRoute
  '/layout': typeof AppLayoutRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AppAboutRoute
  '/layout': typeof AppLayoutRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/about': typeof AppAboutRoute
  '/_app/layout': typeof AppLayoutRoute
  '/_app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/layout' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/layout' | '/'
  id: '__root__' | '/_app/about' | '/_app/layout' | '/_app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppLayoutRoute: typeof AppLayoutRoute
  AppIndexRoute: typeof AppIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/layout': {
      id: '/_app/layout'
      path: '/layout'
      fullPath: '/layout'
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppLayoutRoute: AppLayoutRoute,
  AppIndexRoute: AppIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
